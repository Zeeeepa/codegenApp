# =============================================================================
# CODEGENAPP ENVIRONMENT CONFIGURATION
# =============================================================================
# Copy this file to .env and update the values according to your setup
# =============================================================================

# =============================================================================
# SERVER CONFIGURATION
# =============================================================================
HOST=0.0.0.0
PORT=3001
DEBUG=false

# =============================================================================
# OFFICIAL CODEGEN API CONFIGURATION
# =============================================================================
# Get your API credentials from https://codegen.com/settings
CODEGEN_API_KEY=your_api_key_here
CODEGEN_ORG_ID=your_org_id_here
CODEGEN_API_BASE_URL=https://api.codegen.com

# =============================================================================
# LEGACY CODEGEN API (DEPRECATED)
# =============================================================================
# Only needed if using legacy API endpoints
# CODEGEN_API_TOKEN=your_legacy_token_here

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
# SQLite (default - no setup required)
DATABASE_URL=sqlite:///./codegenapp.db

# PostgreSQL (uncomment and configure if needed)
# DATABASE_URL=postgresql://username:password@localhost:5432/codegenapp

# MySQL (uncomment and configure if needed)
# DATABASE_URL=mysql://username:password@localhost:3306/codegenapp

# =============================================================================
# REDIS CONFIGURATION
# =============================================================================
# Local Redis (default)
REDIS_URL=redis://localhost:6379/0

# Redis with authentication
# REDIS_URL=redis://:password@localhost:6379/0

# Redis Cloud/Remote
# REDIS_URL=redis://username:password@redis-host:6379/0

# =============================================================================
# SECURITY SETTINGS
# =============================================================================
# Generate a secure secret key for JWT tokens
# You can generate one with: python -c "import secrets; print(secrets.token_urlsafe(32))"
JWT_SECRET_KEY=your_jwt_secret_key_here
JWT_ALGORITHM=HS256
JWT_EXPIRATION_HOURS=24

# CORS Configuration (handled in settings.py by default)
# Uncomment and modify if you need custom CORS origins
# CORS_ORIGINS=["http://localhost:3000","http://localhost:3001","http://localhost:3002","http://localhost:8000"]
CORS_ALLOW_CREDENTIALS=true

# =============================================================================
# EXTERNAL API KEYS (OPTIONAL)
# =============================================================================

# Gemini API (for Web-Eval-Agent validation)
# Get your key from: https://makersuite.google.com/app/apikey
GEMINI_API_KEY=your_gemini_api_key_here

# GitHub API (for repository operations)
# Create a personal access token: https://github.com/settings/tokens
GITHUB_TOKEN=your_github_token_here

# =============================================================================
# SERVICE CONFIGURATIONS
# =============================================================================

# Grainchain (Docker-based sandboxing)
GRAINCHAIN_DOCKER_HOST=unix://var/run/docker.sock
GRAINCHAIN_REGISTRY_URL=
GRAINCHAIN_DEFAULT_TIMEOUT=300
GRAINCHAIN_MAX_CONCURRENT_SANDBOXES=10
GRAINCHAIN_CLEANUP_INTERVAL=3600

# Web-Eval-Agent (Browser automation)
WEB_EVAL_BROWSER_TYPE=chromium
WEB_EVAL_HEADLESS=true
WEB_EVAL_TIMEOUT=60
WEB_EVAL_MAX_CONCURRENT=5
WEB_EVAL_SCREENSHOT_ON_FAILURE=true

# =============================================================================
# WORKFLOW ORCHESTRATION
# =============================================================================
WORKFLOW_MAX_CONCURRENT=20
WORKFLOW_DEFAULT_TIMEOUT=1800
WORKFLOW_RETRY_ATTEMPTS=3
WORKFLOW_RETRY_DELAY=5
WORKFLOW_ENABLE_PERSISTENCE=true
WORKFLOW_CLEANUP_COMPLETED_AFTER=86400

# =============================================================================
# VALIDATION PIPELINE
# =============================================================================
VALIDATION_TIMEOUT_MINUTES=30
MAX_VALIDATION_RETRIES=3
AUTO_MERGE_ENABLED=true
MAX_CONCURRENT_VALIDATIONS=5

# =============================================================================
# MONITORING & LOGGING
# =============================================================================
LOG_LEVEL=INFO
LOG_FORMAT=%(asctime)s - %(name)s - %(levelname)s - %(message)s

# Prometheus metrics
ENABLE_METRICS=true
METRICS_PORT=8002

# =============================================================================
# DEVELOPMENT SETTINGS
# =============================================================================
# Only enable in development environment
# RELOAD_ON_CHANGE=true
# ENABLE_DEBUG_TOOLBAR=false

# =============================================================================
# PRODUCTION SETTINGS
# =============================================================================
# Uncomment for production deployment
# SSL_KEYFILE=/path/to/keyfile.pem
# SSL_CERTFILE=/path/to/certfile.pem
# WORKERS=4

# =============================================================================
# ENVIRONMENT NOTES
# =============================================================================
# 
# REQUIRED VARIABLES (must be updated):
# - CODEGEN_API_KEY: Your Codegen API key from https://codegen.com/settings
# - CODEGEN_ORG_ID: Your Codegen organization ID
# - JWT_SECRET_KEY: A secure secret key for JWT token signing
#
# OPTIONAL BUT RECOMMENDED:
# - GEMINI_API_KEY: For Web-Eval-Agent functionality
# - GITHUB_TOKEN: For GitHub repository operations
# - DATABASE_URL: If using external database instead of SQLite
# - REDIS_URL: If using external Redis instead of local
#
# DEVELOPMENT vs PRODUCTION:
# - Set DEBUG=true for development
# - Use strong JWT_SECRET_KEY in production
# - Configure proper DATABASE_URL for production
# - Set up SSL certificates for HTTPS in production
#
# =============================================================================

