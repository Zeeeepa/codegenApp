
> agent-run-manager-web@1.0.0 dev
> concurrently "npm run server:dev" "npm run start"

[1] 
[1] > agent-run-manager-web@1.0.0 start
[1] > PORT=8080 react-scripts start
[1] 
[0] 
[0] > agent-run-manager-web@1.0.0 server:dev
[0] > cd server && npm run dev
[0] 
[0] 
[0] > agent-run-manager-server@1.0.0 dev
[0] > nodemon index.js
[0] 
[0] [33m[nodemon] 3.1.10[39m
[0] [33m[nodemon] to restart at any time, enter `rs`[39m
[0] [33m[nodemon] watching path(s): *.*[39m
[0] [33m[nodemon] watching extensions: js,mjs,cjs,json[39m
[0] [32m[nodemon] starting `node index.js`[39m
[0] üöÄ Proxy server running on port 3002
[0] üéØ Proxying to: https://api.codegen.com
[0] üåê Health check: http://localhost:3002/health
[1] (node:8402) [DEP_WEBPACK_DEV_SERVER_ON_AFTER_SETUP_MIDDLEWARE] DeprecationWarning: 'onAfterSetupMiddleware' option is deprecated. Please use the 'setupMiddlewares' option.
[1] (Use `node --trace-deprecation ...` to show where the warning was created)
[1] (node:8402) [DEP_WEBPACK_DEV_SERVER_ON_BEFORE_SETUP_MIDDLEWARE] DeprecationWarning: 'onBeforeSetupMiddleware' option is deprecated. Please use the 'setupMiddlewares' option.
[1] Starting the development server...
[1] 
[1] Compiled successfully!
[1] 
[1] You can now view agent-run-manager-web in the browser.
[1] 
[1]   Local:            http://localhost:8080
[1]   On Your Network:  http://172.20.60.35:8080
[1] 
[1] Note that the development build is not optimized.
[1] To create a production build, use npm run build.
[1] 
[1] webpack compiled successfully
[1] Files successfully emitted, waiting for typecheck results...
[1] Issues checking in progress...
[1] ERROR in src/list-agent-runs.tsx:586:32
[1] TS2552: Cannot find name 'navigate'. Did you mean 'navigator'?
[1]     584 |               )}
[1]     585 |               <button
[1]   > 586 |                 onClick={() => navigate('/create-agent-run')}
[1]         |                                ^^^^^^^^
[1]     587 |                 className="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
[1]     588 |               >
[1]     589 |                 <Plus className="h-4 w-4 mr-2" />
[1] 
[1] ERROR in src/list-agent-runs.tsx:677:32
[1] TS2339: Property 'updated_at' does not exist on type 'AgentRunResponse'.
[1]     675 |                         <div className="flex items-center space-x-4 text-sm text-gray-500">
[1]     676 |                           <span>Created {formatDate(run.created_at)}</span>
[1]   > 677 |                           {run.updated_at && run.updated_at !== run.created_at && (
[1]         |                                ^^^^^^^^^^
[1]     678 |                             <span className="text-yellow-400">‚Ä¢ Updated {formatDate(run.updated_at)}</span>
[1]     679 |                           )}
[1]     680 |                           {run.result && (
[1] 
[1] ERROR in src/list-agent-runs.tsx:677:50
[1] TS2339: Property 'updated_at' does not exist on type 'AgentRunResponse'.
[1]     675 |                         <div className="flex items-center space-x-4 text-sm text-gray-500">
[1]     676 |                           <span>Created {formatDate(run.created_at)}</span>
[1]   > 677 |                           {run.updated_at && run.updated_at !== run.created_at && (
[1]         |                                                  ^^^^^^^^^^
[1]     678 |                             <span className="text-yellow-400">‚Ä¢ Updated {formatDate(run.updated_at)}</span>
[1]     679 |                           )}
[1]     680 |                           {run.result && (
[1] 
[1] ERROR in src/list-agent-runs.tsx:678:89
[1] TS2339: Property 'updated_at' does not exist on type 'AgentRunResponse'.
[1]     676 |                           <span>Created {formatDate(run.created_at)}</span>
[1]     677 |                           {run.updated_at && run.updated_at !== run.created_at && (
[1]   > 678 |                             <span className="text-yellow-400">‚Ä¢ Updated {formatDate(run.updated_at)}</span>
[1]         |                                                                                         ^^^^^^^^^^
[1]     679 |                           )}
[1]     680 |                           {run.result && (
[1]     681 |                             <span className="text-blue-400">‚Ä¢ Has Response</span>
[1] 
[1] ERROR in src/tests/browser-automation-integration.test.tsx:7:23
[1] TS7016: Could not find a declaration file for module 'jsdom'. '/tmp/Zeeeepa/codegenApp/node_modules/jsdom/lib/api.js' implicitly has an 'any' type.
[1]   Try `npm i --save-dev @types/jsdom` if it exists or add a new declaration (.d.ts) file containing `declare module 'jsdom';`
[1]      5 |  */
[1]      6 |
[1]   >  7 | import { JSDOM } from 'jsdom';
[1]        |                       ^^^^^^^
[1]      8 |
[1]      9 | // Mock environment for browser automation testing
[1]     10 | const createMockBrowserEnvironment = () => {
[1] 
[1] ERROR in src/tests/browser-automation.test.tsx:317:40
[1] TS2304: Cannot find name 'defaultProps'.
[1]     315 |         .mockReturnValueOnce(mockSendButton); // CSS fallback succeeds
[1]     316 |
[1]   > 317 |       render(<ResumeAgentRunDialog {...defaultProps} />);
[1]         |                                        ^^^^^^^^^^^^
[1]     318 |       
[1]     319 |       const promptInput = screen.getByLabelText(/resume prompt/i);
[1]     320 |       const resumeButton = screen.getByRole('button', { name: /resume agent run/i });
[1] 
[1] ERROR in src/tests/browser-automation.test.tsx:355:40
[1] TS2304: Cannot find name 'defaultProps'.
[1]     353 |         .mockReturnValueOnce(mockSendButton); // Generic send button succeeds
[1]     354 |
[1]   > 355 |       render(<ResumeAgentRunDialog {...defaultProps} />);
[1]         |                                        ^^^^^^^^^^^^
[1]     356 |       
[1]     357 |       const promptInput = screen.getByLabelText(/resume prompt/i);
[1]     358 |       const resumeButton = screen.getByRole('button', { name: /resume agent run/i });
[1] 
[1] ERROR in src/tests/browser-automation.test.tsx:384:40
[1] TS2304: Cannot find name 'defaultProps'.
[1]     382 |       mockWindowOpen.mockReturnValue(mockRestrictedWindow);
[1]     383 |
[1]   > 384 |       render(<ResumeAgentRunDialog {...defaultProps} />);
[1]         |                                        ^^^^^^^^^^^^
[1]     385 |       
[1]     386 |       const promptInput = screen.getByLabelText(/resume prompt/i);
[1]     387 |       const resumeButton = screen.getByRole('button', { name: /resume agent run/i });
[1] 
[1] ERROR in src/tests/browser-automation.test.tsx:412:40
[1] TS2304: Cannot find name 'defaultProps'.
[1]     410 |       });
[1]     411 |
[1]   > 412 |       render(<ResumeAgentRunDialog {...defaultProps} />);
[1]         |                                        ^^^^^^^^^^^^
[1]     413 |       
[1]     414 |       const promptInput = screen.getByLabelText(/resume prompt/i);
[1]     415 |       const resumeButton = screen.getByRole('button', { name: /resume agent run/i });
[1] 
[1] ERROR in src/tests/browser-automation.test.tsx:443:40
[1] TS2304: Cannot find name 'defaultProps'.
[1]     441 |       });
[1]     442 |
[1]   > 443 |       render(<ResumeAgentRunDialog {...defaultProps} />);
[1]         |                                        ^^^^^^^^^^^^
[1]     444 |       
[1]     445 |       const promptInput = screen.getByLabelText(/resume prompt/i);
[1]     446 |       const resumeButton = screen.getByRole('button', { name: /resume agent run/i });
[1] 
[1] ERROR in src/tests/browser-automation.test.tsx:488:40
[1] TS2304: Cannot find name 'defaultProps'.
[1]     486 |         .mockReturnValueOnce({ singleNodeValue: mockSendButton });
[1]     487 |
[1]   > 488 |       render(<ResumeAgentRunDialog {...defaultProps} />);
[1]         |                                        ^^^^^^^^^^^^
[1]     489 |       
[1]     490 |       const promptInput = screen.getByLabelText(/resume prompt/i);
[1]     491 |       const resumeButton = screen.getByRole('button', { name: /resume agent run/i });
[1] 
